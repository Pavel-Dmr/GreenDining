<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ecom4.green.user.dao.ReviewDAO">

    <!-- review -->
    <insert id="insertReview" parameterType="reviewDTO">
        <selectKey keyProperty="id" order="BEFORE"
                   resultType="int">
            SELECT NVL(MAX(id),0)+1 FROM REVIEW
        </selectKey>
        INSERT INTO REVIEW( ID,
        USER_ID,
        ORDER_ID,
        PRODUCT_ID,
        STAR,
        TITLE,
        CONTENT,
        CREATED_AT,
        CHILD_ID,
        IMAGE_GROUP_ID,
        SALE_ID)
        VALUES( #{id},
        #{user_id},
        #{order_id},
        #{product_id},
        #{star},
        #{title},
        #{content},
        SYSDATE,
        #{child_id},
        <if test="image_group_id != 0">
            #{image_group_id},
        </if>
        <if test="image_group_id == 0">
            0,
        </if>
        #{sale_id})
    </insert>

    <select id="selectReviewList" parameterType="reviewDTO" resultType="reviewDTO">
        SELECT USER_ID, ID, ORDER_ID, PRODUCT_ID, STAR, TITLE, CONTENT,
        CREATED_AT, CHILD_ID, IMAGE_GROUP_ID, SALE_ID
        FROM REVIEW
        WHERE SALE_ID = #{sale_id}
        <if test="user_id != '' and user_id != null">
            AND USER_ID = #{user_id}
        </if>
    </select>

    <select id="selectReview" parameterType="reviewDTO" resultType="reviewDTO">
        SELECT *
        FROM REVIEW
        WHERE ID = #{id}
        AND USER_ID = #{user_id}
    </select>

    <update id="updateReview" parameterType="reviewDTO">
        UPDATE REVIEW SET
        USER_ID = #{user_id},
        <!-- 		ID = #{id}, -->
        ORDER_ID = #{order_id},
        PRODUCT_ID = #{product_id},
        STAR = #{star},
        TITLE = #{title},
        CONTENT = #{content},
        CREATED_AT = SYSDATE,
        CHILD_ID = #{child_id},
        IMAGE_GROUP_ID = #{image_group_id},
        SALE_ID = #{sale_id}
        WHERE USER_ID = #{user_id}
        AND ID = #{id}
    </update>


    <delete id="deleteReview" parameterType="reviewDTO">
        DELETE FROM REVIEW
        WHERE USER_ID = #{user_id}
        AND ID = #{id}
    </delete>
    <select id="selectReviewCountByMap" parameterType="map" resultType="int">
        select count(*)
        from review
        where sale_id = #{map.sale_id}
    </select>
    <select id="selectReviewTotalStarByMap" parameterType="map" resultType="int">
        select nvl(sum(star),0)
        from review
        where sale_id = #{map.sale_id}
    </select>
</mapper>